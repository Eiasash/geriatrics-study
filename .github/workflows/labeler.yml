name: Pull Request Labeler

on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write

jobs:
  label:
    name: Auto-label PR
    runs-on: ubuntu-latest
    steps:
      - name: Label PR based on paths
        uses: actions/labeler@v5
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          configuration-path: .github/labeler.yml
          sync-labels: true

  size-label:
    name: Add size label
    runs-on: ubuntu-latest
    steps:
      - name: Add size label
        uses: codelytv/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size: XS'
          xs_max_size: 10
          s_label: 'size: S'
          s_max_size: 30
          m_label: 'size: M'
          m_max_size: 100
          l_label: 'size: L'
          l_max_size: 500
          xl_label: 'size: XL'
          fail_if_xl: false
          message_if_xl: |
            This PR is very large (500+ lines). Consider breaking it into smaller PRs for easier review.
          github_api_url: https://api.github.com

  needs-review:
    name: Add review labels
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Add needs-review label
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['needs review']
            })

  dependabot-labels:
    name: Label Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Add Dependabot labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = ['dependencies'];
            
            // Determine package manager from branch name
            const branchName = context.payload.pull_request.head.ref;
            if (branchName.includes('npm')) {
              labels.push('javascript', 'component: h5p');
            } else if (branchName.includes('pip')) {
              labels.push('python', 'component: anki');
            } else if (branchName.includes('github-actions')) {
              labels.push('type: ci/cd');
            }
            
            // Add security label if it's a security update
            const title = context.payload.pull_request.title.toLowerCase();
            if (title.includes('security') || title.includes('vulnerability')) {
              labels.push('security', 'priority: high');
            }
            
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: labels
            });